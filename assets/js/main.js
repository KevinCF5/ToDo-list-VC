(()=>{var n=[];for(l=0;l<256;++l)n.push((l+256).toString(16).slice(1));var l;function g(a,e=0){return(n[a[e+0]]+n[a[e+1]]+n[a[e+2]]+n[a[e+3]]+"-"+n[a[e+4]]+n[a[e+5]]+"-"+n[a[e+6]]+n[a[e+7]]+"-"+n[a[e+8]]+n[a[e+9]]+"-"+n[a[e+10]]+n[a[e+11]]+n[a[e+12]]+n[a[e+13]]+n[a[e+14]]+n[a[e+15]]).toLowerCase()}var c,T=new Uint8Array(16);function m(){if(!c&&(c=typeof crypto<"u"&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto),!c))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return c(T)}var h=typeof crypto<"u"&&crypto.randomUUID&&crypto.randomUUID.bind(crypto),u={randomUUID:h};function f(a,e,o){if(u.randomUUID&&!e&&!a)return u.randomUUID();a=a||{};var s=a.random||(a.rng||m)();if(s[6]=s[6]&15|64,s[8]=s[8]&63|128,e){o=o||0;for(var t=0;t<16;++t)e[o+t]=s[t];return e}return g(s)}var k=f;window.addEventListener("load",()=>{customElements.define("tasks-container",p)});var p=class extends HTMLElement{form;tasksContainer;tasks=[];constructor(){super();let e=document.querySelector("#formElement"),o=document.querySelector("#tasksContainer");if(!(!e||!o)){this.form=e,this.tasksContainer=o,this.form.addEventListener("submit",this.handleCreateNewTask.bind(this)),this.handleLocalStorageInit(),this.handleUpdateTaskBadges();for(let s=0;s<this.tasks.length;s++){let t=this.tasks[s];o.insertAdjacentHTML("beforeend",`<li class="task-item ${t.completed?"completed":""}" id="task-item-${t.id}">
        <button id="completeTaskBtn-${t.id}" class="completeTaskBtn">
          <img class="uncompleted-icon" src="assets/media/check.svg" />
          <img class="completed-icon" src="assets/media/checked.svg" />
        </button>
        <p>${t.message}</p>
        <button id="removeTaskBtn-${t.id}">
          <img src="assets/media/trash.svg" />
        </button>
        </li>`),document.querySelector(`#completeTaskBtn-${t.id}`).addEventListener("click",()=>this.handleCompleteTask(t.id)),document.querySelector(`#removeTaskBtn-${t.id}`).addEventListener("click",()=>this.handleRemoveTask(t.id))}}}handleLocalStorageInit(){let e=window.localStorage.getItem("tasks");if(!e){window.localStorage.setItem("tasks",JSON.stringify([]));return}let o=JSON.parse(e);console.log("parsedTasks",o),this.tasks=o,console.log("tasks ahah",this.tasks)}handleUpdateTaskBadges(){let e=document.querySelector("#completedTasksBadge"),o=document.querySelector("#createdTasksBadge");if(!e||!o)return;o.textContent=String(this.tasks.length);let s=this.tasks.filter(t=>t.completed);e.textContent=`${s.length} de ${this.tasks.length}`}addNewLsTask(e){let o=window.localStorage.getItem("tasks");if(!o)return;let s=JSON.parse(o);s.push(e),window.localStorage.setItem("tasks",JSON.stringify(s))}handleCreateNewTask(e){e.preventDefault();let s=new FormData(e.target).get("add-task"),t={id:k(),message:s,completed:!1};console.log("tasks ahahah",this.tasks),this.tasks.push(t),document.querySelector("#add-task").value="",this.tasksContainer.insertAdjacentHTML("beforeend",`<li class="task-item" id="task-item-${t.id}">
      <button id="completeTaskBtn-${t.id}" class="completeTaskBtn">
      <img class="uncompleted-icon" src="assets/media/check.svg" />
      <img class="completed-icon" src="assets/media/checked.svg" />
      </button>
      <p>${s}</p>
      <button id="removeTaskBtn-${t.id}">
        <img src="assets/media/trash.svg" />
      </button>
    </li>`),document.querySelector(`#completeTaskBtn-${t.id}`).addEventListener("click",()=>this.handleCompleteTask(t.id)),document.querySelector(`#removeTaskBtn-${t.id}`).addEventListener("click",()=>this.handleRemoveTask(t.id)),this.addNewLsTask(t),this.handleUpdateTaskBadges()}handleCompleteTask(e){console.log(`completed task ${e}`);let o=this.tasks.find(r=>r.id===e),s=document.querySelector(`#task-item-${e}`);if(!s||!o)return;o.completed=!0;let t=window.localStorage.getItem("tasks");if(!t)return;let d=JSON.parse(t),i=d.find(r=>r.id===e);i&&(i.completed=!0,window.localStorage.setItem("tasks",JSON.stringify(d)),s.classList.add("completed"),this.handleUpdateTaskBadges())}handleRemoveTask(e){console.log("taskIndex",e);let o=document.querySelector(`#task-item-${e}`);if(!o)return;o.remove();let s=window.localStorage.getItem("tasks");if(!s)return;let t=JSON.parse(s),d=t.findIndex(r=>r.id===e);t.splice(d,1);let i=this.tasks.findIndex(r=>r.id===e);this.tasks.splice(i,1),window.localStorage.setItem("tasks",JSON.stringify(t)),this.handleUpdateTaskBadges()}};})();
